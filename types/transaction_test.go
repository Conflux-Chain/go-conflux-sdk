package types

import (
	"encoding/json"
	"reflect"
	"testing"

	"github.com/ethereum/go-ethereum/rlp"
)

func TestRLPMarshalTransaction(t *testing.T) {
	txJson1 := `{"hash":"0x4016c5b1675182700ef67b9df90c13ddf2e774b12385af63ba43576039b13f8a","nonce":"0x0","blockHash":"0xce70d3387731e0d09605c37c322070ba30223b327b8790b15086847241cb857d","transactionIndex":"0x0","from":"cfx:aam9edem02j9tmzavu81y4g0ygy06cyeg2vx3zwe8y","to":"cfx:acb59fk6vryh8dj5vyvehj9apzhpd72rdpwsc651kz","value":"0x0","gasPrice":"0x1","gas":"0x4c4b40","contractCreated":null,"data":"0xfebe49090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000162788589c8e386863f217faef78840919fb2854","storageLimit":"0x40","epochHeight":"0x5","chainId":"0x405","status":"0x0","v":"0x0","r":"0x7c15d3f0e517a66ad96a79cfd24b00439de725d9cbbcb8a1d0107cd5c16c8751","s":"0x27a0faab73d4ab512fa97d9e52ef3b3d2bea2a39d58c8d3d65dac59abbe6fee5"}`
	txJson2 := `{"hash":"0xdeffba5291f0d669ca63514f2f9c95fd313fcf6c2855ec929076225890113b59","nonce":"0x0","blockHash":"0xa751293043bba5353b0fca393820927ec9bc30a27916a085c92ba4e79f8152f7","transactionIndex":"0x0","from":"cfxtest:aaph8hphbv84fkn3bunm051aek68aua6wy0tg08xnd","to":null,"value":"0x0","gasPrice":"0x3b9aca00","gas":"0x6ed68","contractCreated":"cfxtest:aca514ancmbdu9u349u4m7d0u4jjdv83py3muarnv1","data":"0x608060405234801561001057600080fd5b50610544806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806328f7fd781461003b578063cf7bb3091461006b575b600080fd5b61005560048036038101906100509190610308565b61009b565b6040516100629190610432565b60405180910390f35b610085600480360381019061008091906102c3565b610115565b6040516100929190610432565b60405180910390f35b600084846040516100ad9291906103de565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167f14cb751d0950ff2788201931c45f715f7472443bc197311d9e3a7a0ba566b7e68787878760405161010194939291906103f7565b60405180910390a360019050949350505050565b600080600090505b838390508110156102225783838281811061013457fe5b905060200281019061014691906104a4565b8060000190610155919061044d565b6040516101639291906103de565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167f14cb751d0950ff2788201931c45f715f7472443bc197311d9e3a7a0ba566b7e68686858181106101af57fe5b90506020028101906101c191906104a4565b80600001906101d0919061044d565b8888878181106101dc57fe5b90506020028101906101ee91906104a4565b80602001906101fd919061044d565b60405161020d94939291906103f7565b60405180910390a3808060010191505061011d565b5082829050905092915050565b60008083601f84011261024157600080fd5b8235905067ffffffffffffffff81111561025a57600080fd5b60208301915083602082028301111561027257600080fd5b9250929050565b60008083601f84011261028b57600080fd5b8235905067ffffffffffffffff8111156102a457600080fd5b6020830191508360018202830111156102bc57600080fd5b9250929050565b600080602083850312156102d657600080fd5b600083013567ffffffffffffffff8111156102f057600080fd5b6102fc8582860161022f565b92509250509250929050565b6000806000806040858703121561031e57600080fd5b600085013567ffffffffffffffff81111561033857600080fd5b61034487828801610279565b9450945050602085013567ffffffffffffffff81111561036357600080fd5b61036f87828801610279565b925092505092959194509250565b600061038983856104c8565b93506103968385846104ee565b61039f836104fd565b840190509392505050565b60006103b683856104d9565b93506103c38385846104ee565b82840190509392505050565b6103d8816104e4565b82525050565b60006103eb8284866103aa565b91508190509392505050565b6000604082019050818103600083015261041281868861037d565b9050818103602083015261042781848661037d565b905095945050505050565b600060208201905061044760008301846103cf565b92915050565b6000808335600160200384360303811261046657600080fd5b80840192508235915067ffffffffffffffff82111561048457600080fd5b60208301925060018202360383131561049c57600080fd5b509250929050565b6000823560016040038336030381126104bc57600080fd5b80830191505092915050565b600082825260208201905092915050565b600081905092915050565b6000819050919050565b82818337600083830152505050565b6000601f19601f830116905091905056fea26469706673582212200aab70e63ece6dc222afcf381fec642c6d414adf33cf0ed6da53680bd904f5ac64736f6c63430007040033","storageLimit":"0x466","epochHeight":"0x43e","chainId":"0x1","status":"0x0","v":"0x0","r":"0x4b0551c1db7ec8ea089f15e679cf0ec3ba15c638b8b3f71ce8df5e35f29f6c9f","s":"0x7c7f2130c26c31f744092a58ea3daac826695a9aef45ec6fad38b9a0c2882a23"}`

	for _, txJson := range []string{txJson2, txJson1} {
		var tx Transaction
		err := json.Unmarshal([]byte(txJson), &tx)
		fatalIfErr(t, err)
		// RLP marshal tx to bytes
		dBytes, err := rlp.EncodeToBytes(tx)
		fatalIfErr(t, err)
		// RLP unmarshal bytes back to transaction
		var tx2 Transaction
		err = rlp.DecodeBytes(dBytes, &tx2)
		fatalIfErr(t, err)
		// Json marshal tx
		jBytes1, err := json.Marshal(tx)
		fatalIfErr(t, err)
		txJsonStr := string(jBytes1)
		// Json marshal tx2
		jBytes2, err := json.Marshal(tx2)
		fatalIfErr(t, err)
		txJsonStr2 := string(jBytes2)

		if txJsonStr2 != txJsonStr {
			t.Fatalf("expect %#v, actual %#v", txJsonStr, txJsonStr2)
		}
	}
}

func TestRLPMarshalTransactionReceipt(t *testing.T) {
	trJson1 := `{"transactionHash":"0xa2c678cc97e07ce060b71f87ac65e68d482abf8e1a93b7d1bc425504c4584ca7","index":"0x1","blockHash":"0x935bc7ebab4e6256ade6327682de8bee6b15dcee5c83f7772ae6a945510fe940","epochNumber":"0xf7cf0d","from":"cfx:aaspca00u76ew2eharzsy355svm3t6yw4pxsyu7vka","to":"cfx:acam64yj323zd4t1fhybxh3jsg7hu4012yz9kakxs9","gasUsed":"0x22144","gasFee":"0xd4fe90","contractCreated":null,"logs":[{"address":"cfx:acg158kvr8zanb1bs048ryb6rtrhr283ma70vz70tx","topics":["0x2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d","0x00000000000000000000000080ae6a88ce3351e9f729e8199f2871ba786ad7c5","0x0000000000000000000000008d545118d91c027c805c552f63a5c00a20ae6aca"],"data":"0x00000000000000000000000000000000000000000000003b16c9e8eeb7c800000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","blockHash":null,"epochNumber":null,"transactionHash":null,"transactionIndex":null,"logIndex":null,"transactionLogIndex":null},{"address":"cfx:acg158kvr8zanb1bs048ryb6rtrhr283ma70vz70tx","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000008d545118d91c027c805c552f63a5c00a20ae6aca"],"data":"0x00000000000000000000000000000000000000000000003b16c9e8eeb7c80000","blockHash":null,"epochNumber":null,"transactionHash":null,"transactionIndex":null,"logIndex":null,"transactionLogIndex":null},{"address":"cfx:acg158kvr8zanb1bs048ryb6rtrhr283ma70vz70tx","topics":["0x68051bc50b1ef1654bf1e6204b5f8fa9badcd038e00fa5b43f21f898fc2728ca","0x0000000000000000000000008d545118d91c027c805c552f63a5c00a20ae6aca","0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"],"data":"0x00000000000000000000000000000000000000000000003b16c9e8eeb7c80000","blockHash":null,"epochNumber":null,"transactionHash":null,"transactionIndex":null,"logIndex":null,"transactionLogIndex":null},{"address":"cfx:acf2rcsh8payyxpg6xj7b0ztswwh81ute60tsw35j7","topics":["0x06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987","0x0000000000000000000000008d545118d91c027c805c552f63a5c00a20ae6aca","0x0000000000000000000000008d545118d91c027c805c552f63a5c00a20ae6aca","0x0000000000000000000000001cc102d68778496087036aea677b745597f292d3"],"data":"0x000000000000000000000000000000000000000000000019ceb8990635656bbf0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","blockHash":null,"epochNumber":null,"transactionHash":null,"transactionIndex":null,"logIndex":null,"transactionLogIndex":null},{"address":"cfx:acf2rcsh8payyxpg6xj7b0ztswwh81ute60tsw35j7","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x0000000000000000000000008d545118d91c027c805c552f63a5c00a20ae6aca","0x0000000000000000000000001cc102d68778496087036aea677b745597f292d3"],"data":"0x000000000000000000000000000000000000000000000019ceb8990635656bbf","blockHash":null,"epochNumber":null,"transactionHash":null,"transactionIndex":null,"logIndex":null,"transactionLogIndex":null},{"address":"cfx:acgzjyj25esae9eanvmw827f2afcbnxm3jr3784tyu","topics":["0x1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1"],"data":"0x000000000000000000000000000000000000000000003a4a9c46eba30a4fb89e00000000000000000000000000000000000000000000854b7ce25c8407e77655","blockHash":null,"epochNumber":null,"transactionHash":null,"transactionIndex":null,"logIndex":null,"transactionLogIndex":null},{"address":"cfx:acgzjyj25esae9eanvmw827f2afcbnxm3jr3784tyu","topics":["0xd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822","0x00000000000000000000000080ae6a88ce3351e9f729e8199f2871ba786ad7c5","0x0000000000000000000000001cc102d68778496087036aea677b745597f292d3"],"data":"0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003b16c9e8eeb7c80000000000000000000000000000000000000000000000000019ceb8990635656bbf0000000000000000000000000000000000000000000000000000000000000000","blockHash":null,"epochNumber":null,"transactionHash":null,"transactionIndex":null,"logIndex":null,"transactionLogIndex":null}],"logsBloom":"0x0020000000000000000000008000000000000808000000000000000000000000804000000000200040080000009000000000000000000000000000000008000000000000000010000000000a00000020000000000000000000000000000000000000000002004000000000000000080004000040000000000000001000000000000008000020000000001100000002000000000000000018000000400000000000000000012000000000000000000000000000000000000000000000000000000000000200000010000004000000000000000000000000100000a000000020000000000000000400000000000000000000000000100000000000000000040000","stateRoot":"0x2b35e444ba6118f85447efc1c504b3526229c99451fd172ae35a49fe5d7127bd","outcomeStatus":"0x0","txExecErrorMsg":null,"gasCoveredBySponsor":true,"storageCoveredBySponsor":true,"storageCollateralized":"0x0","storageReleased":[]}`
	trJson2 := `{"transactionHash":"0xa45f5101687f1cc11ea8ea56eab670cff670c55c84c7feb06ed33b7840346c60","index":"0x1","blockHash":"0x25fd857127dbef9e9a4f851ade9b11ac1cb22967266d915fe00f61ec1e356f54","epochNumber":"0xfce4df","from":"cfx:aarh9m8vs8ecrhmw76efb61a5w9yjwyyapz8yj2evb","to":"cfx:acbcnsptvcgggjwb7u8gbprffacx7657k67j8taaxg","gasUsed":"0x13b3a","gasFee":"0x13b3a","contractCreated":null,"logs":[{"address":"cfx:acc8ya1f2a2bfphxg5ax7a8h29k47d5xsebxfj24nd","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x0000000000000000000000008225b98f888c632241ec3c60b1a528053ef37d4f","0x0000000000000000000000001a7fabd17788269d52ef0850f2e0dcbf444a9403"],"data":"0x00000000000000000000000000000000000000000000000016b276f7e4180350","blockHash":"0x25fd857127dbef9e9a4f851ade9b11ac1cb22967266d915fe00f61ec1e356f54","epochNumber":"0xfce4df","transactionHash":"0xa45f5101687f1cc11ea8ea56eab670cff670c55c84c7feb06ed33b7840346c60","transactionIndex":"0x1","logIndex":"0x0","transactionLogIndex":"0x0"},{"address":"cfx:acbcnsptvcgggjwb7u8gbprffacx7657k67j8taaxg","topics":["0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15","0x0000000000000000000000001a7fabd17788269d52ef0850f2e0dcbf444a9403","0x0000000000000000000000000000000000000000000000000000000000000001"],"data":"0x0000000000000000000000000000000000000000000000000000000000000000","blockHash":"0x25fd857127dbef9e9a4f851ade9b11ac1cb22967266d915fe00f61ec1e356f54","epochNumber":"0xfce4df","transactionHash":"0xa45f5101687f1cc11ea8ea56eab670cff670c55c84c7feb06ed33b7840346c60","transactionIndex":"0x1","logIndex":"0x1","transactionLogIndex":"0x1"}],"logsBloom":"0xstateRoot":"0x46347c46f62b53144431cfd6d1e5af9bdf2d2f0ed13b4e68f96cba6cf3839ec0","outcomeStatus":"0x0","txExecErrorMsg":null,"gasCoveredBySponsor":true,"storageCoveredBySponsor":true,"storageCollateralized":"0x0","storageReleased":[]}`
	trJson3 := `{"transactionHash":"0xdeffba5291f0d669ca63514f2f9c95fd313fcf6c2855ec929076225890113b59","index":"0x0","blockHash":"0xa751293043bba5353b0fca393820927ec9bc30a27916a085c92ba4e79f8152f7","epochNumber":"0x441","from":"cfxtest:aaph8hphbv84fkn3bunm051aek68aua6wy0tg08xnd","to":null,"gasUsed":"0x64c30","gasFee":"0x1775ddcfde000","contractCreated":"cfxtest:aca514ancmbdu9u349u4m7d0u4jjdv83py3muarnv1","logs":[],"logsBloom":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","stateRoot":"0x3f57ef68b851da591aac50f1cbdf369d87a2e3b66d7679a00678fb5fcd02653a","outcomeStatus":"0x0","txExecErrorMsg":null,"gasCoveredBySponsor":false,"storageCoveredBySponsor":false,"storageCollateralized":"0x400","storageReleased":[]}`

	for _, trJson := range []string{trJson3, trJson2, trJson1} {
		var tr TransactionReceipt
		err := json.Unmarshal([]byte(trJson), &tr)
		fatalIfErr(t, err)
		// RLP marshal transaction receipt to bytes
		dBytes, err := rlp.EncodeToBytes(tr)
		fatalIfErr(t, err)
		// RLP unmarshal bytes back to transaction receipt
		var tr2 TransactionReceipt
		err = rlp.DecodeBytes(dBytes, &tr2)
		fatalIfErr(t, err)
		// Json marshal tr
		jBytes1, err := json.Marshal(tr)
		fatalIfErr(t, err)
		trJsonStr := string(jBytes1)
		// Json marshal tr2
		jBytes2, err := json.Marshal(tr2)
		fatalIfErr(t, err)
		trJsonStr2 := string(jBytes2)

		if trJsonStr2 != trJsonStr {
			t.Fatalf("expect %#v, actual %#v", trJsonStr, trJsonStr2)
		}
	}
}

func TestMarshalTransactionStatus(t *testing.T) {
	testMarshalTransactionStatus(t, TransactionStatus{
		packedOrReady: "packed",
	}, "packed", []byte("\"packed\""))

	testMarshalTransactionStatus(t, TransactionStatus{
		pending: pending{"futureNonce"},
	}, "futureNonce", []byte("{\"pending\":\"futureNonce\"}"))

}
func testMarshalTransactionStatus(t *testing.T, originTxStatus TransactionStatus, expectString string, expectJson []byte) {
	if originTxStatus.String() != expectString {
		t.Fatalf("expect string %#v, actual %#v", expectString, originTxStatus.String())
	}

	actualJson, _ := json.Marshal(originTxStatus)
	if !reflect.DeepEqual(actualJson, expectJson) {
		t.Fatalf("expect json %#v, actual %#v", string(expectJson), string(actualJson))
	}
}

func TestUnmarshalTransactionStatus(t *testing.T) {
	testUnmarshalTransactionStatus(t, []byte("\"packed\""), TransactionStatus{
		packedOrReady: "packed",
	})
	testUnmarshalTransactionStatus(t, []byte("{\"pending\": \"futureNonce\"}"), TransactionStatus{
		pending: pending{"futureNonce"},
	})
}

func testUnmarshalTransactionStatus(t *testing.T, originTxStatusJson []byte, expectTxStatus TransactionStatus) {
	actualTxStatus := TransactionStatus{}
	json.Unmarshal(originTxStatusJson, &actualTxStatus)
	if !reflect.DeepEqual(actualTxStatus, expectTxStatus) {
		t.Fatalf("expect %#v, actual %#v", expectTxStatus, actualTxStatus)
	}
}

func fatalIfErr(t *testing.T, err error) {
	if err != nil {
		t.Fatal(err)
	}
}
